/* start styles for all pages */
body {font-family: 'Roboto', sans-serif; background-color: #ececec; }
img, iframe{ vertical-align: top;}
[ng-click], [ui-sref]{ cursor: pointer;}
:focus { outline: 0; }

::-webkit-scrollbar { height: 12px; width: 5px; background: #eee; }
::-webkit-scrollbar-thumb { background: #bbb; }
::-webkit-scrollbar-thumb:hover { cursor: pointer; background: #ccc; }
::-webkit-scrollbar-corner { background: #ccc; }

/* Rules for sizing the icon. */
.material-icons.md-18 { font-size: 18px; width:18px; height:18px; }
.material-icons.md-20 { font-size: 20px; width:20px; height:20px; }
.material-icons.md-22 { font-size: 22px; width:22px; height:22px; }
.material-icons.md-24 { font-size: 24px; width:24px; height:24px; }
.material-icons.md-36 { font-size: 36px; width:36px; height:36px; }
.material-icons.md-48 { font-size: 48px; width:48px; height:48px; }

/* Rules for using icons as black on a light background. */
.material-icons.md-dark { color: rgba(0, 0, 0, 0.54); }
.material-icons.md-dark.md-inactive { color: rgba(0, 0, 0, 0.26); }

/* Rules for using icons as white on a dark background. */
.material-icons.md-light { color: rgba(255, 255, 255, 1); }
.material-icons.md-light.md-inactive { color: rgba(255, 255, 255, 0.3); }

md-content{ background:#eeeeee;}
.container{ width:1100px; max-width:95%; margin:0 auto; padding:12px 0;}
.hotel-headline{ font-weight:300;}
.card-image-container{ height:180px; overflow:hidden; position:relative;} 
.card-image-container img{ width:100%;height: 100%;}
.image-overlay{ position:absolute; left:0; top:0; width:100%; height:100%; background:rgba(0,0,0,0.4); color:rgba(255,255,255,0.85);}
.overlay-text{ text-align:center; padding:20px;}
.overlay-text .md-title { font-weight:300; padding-bottom:16px;}
.overlay-text .md-caption { font-weight:500;}
.nomargin{margin: 0;}
.curerncy{font-weight: 300;margin-right: 5px;}
.yellow{color:#f8c722;}
.loadingDiv {
	position: fixed;
	width: 100%;
	height: 100%;
	background: rgba(0, 0, 0, 0.75);
	z-index: 99999;
	left: 0;
	top: 0;
}

.repeatAnimation{
	-webkit-transition: 200ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    -moz-transition: 200ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    -ms-transition: 200ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    -o-transition: 200ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    transition: 200ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
}
.repeatAnimation.ng-enter, .animate-repeat.ng-move
{ 
    -webkit-transition: 200ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    -moz-transition: 200ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    -ms-transition: 200ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    -o-transition: 200ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    transition: 200ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;
    position: relative;
    display: block;
} 
 
.repeatAnimation.ng-enter.ng-enter-active, .animate-repeat.ng-move {
    opacity: 1;
    top: 0;
    width: 100%;
}

.repeatAnimation.ng-move.ng-move-active,
.repeatAnimation.ng-enter {
    opacity: 0;
    top: 100px;
}
/*** Stagger ENTER ANIMATION */
.repeatAnimation.ng-enter-stagger {
    /* this will have a 100ms delay between each successive enter animation */
    -webkit-transition-delay: 0.05s;
    transition-delay: 0.05s;
    /* in case the stagger doesn't work then these two values
     must be set to 0 to avoid an accidental CSS inheritance */
    -webkit-transition-duration: 0s;
    transition-duration: 0s;
}


